name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      snell_version:
        description: 'Snell Server Version (e.g., v5.0.0b1)'
        required: true
        default: 'v5.0.0b1'
        type: string

env:
  REGISTRY: docker.io
  IMAGE_NAME: snell-server

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set Snell Version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "snell_version=${{ github.event.inputs.snell_version }}" >> $GITHUB_OUTPUT
        else
          # 从 Dockerfile 中提取 SNELL_VERSION
          SNELL_VERSION=$(grep 'ARG SNELL_VERSION=' Dockerfile | cut -d'=' -f2)
          echo "snell_version=$SNELL_VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=${{ steps.version.outputs.snell_version }}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          SNELL_VERSION=${{ steps.version.outputs.snell_version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max